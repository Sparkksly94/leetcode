"""
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

Example 1:

Input: 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
"""

#My answer:
class Solution:
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        ret=[1,1]
        if n==1:
            return ret[1]
        else:
            for i in range(1,n):
                ret.append(ret[-2]+ret[-1])
        return ret[-1]

#Better answer:
class Solution:
    def __init__(self):
        self.dic = {1:1, 2:2}
    def climbStairs(self, n):
        if n not in self.dic:
            self.dic[n] = self.climbStairs(n-1) + self.climbStairs(n-2)
        return self.dic[n]