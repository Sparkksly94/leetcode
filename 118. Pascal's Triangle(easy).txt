"""
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:
Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
"""

#My answer:
class Solution:
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        if numRows==0:
            return []
        if numRows==1:
            return [[1]]
        ret=self.generate(numRows-1)
        cur=[0 for i in range(len(ret[-1]))]
        for i in range(len(ret[-1])):
            if i==0:
                cur[i]=1
            else:
                cur[i]=ret[-1][i-1]+ret[-1][i]
        cur.append(1)
        ret.append(cur)
        return ret

#Better answer:
